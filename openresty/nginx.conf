worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log  /dev/stdout;
    error_log   /dev/stderr;

    server {
        listen 8080;

        location / {
            # CORS
            if ($http_origin ~* (https?://(localhost|yourdomain).com)) {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 86400 always;
            }

            if ($request_method = 'OPTIONS') {
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            return 404;
        }

        location = /health {
            default_type application/json;
            return 200 '{"message": "ok from api-gateway"}';
        }

        location /v1/auth/ {
            rewrite ^/v1/auth/(.*)$ /$1 break;
            proxy_pass http://identity_service;  # No https here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /v1/image/ {
            rewrite ^/v1/image/(.*)$ /$1 break;
            proxy_pass http://image_service;  # No https here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }

    upstream identity_service {
        server identity-service-afm5.onrender.com:443;  # Use hostname without https://
    }

    upstream image_service {
        server image-service-abrx.onrender.com:443;  # Use hostname without https://
    }
}
