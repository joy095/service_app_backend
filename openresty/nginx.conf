worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log  /dev/stdout;
    error_log   /dev/stderr debug;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Buffer settings
    proxy_buffer_size 16k;
    proxy_buffers 4 16k;
    proxy_busy_buffers_size 32k;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Define upstreams
    upstream identity_service {
        server identity-service-afm5.onrender.com:443;
    }

    upstream image_service {
        server image-service-abrx.onrender.com:443;
    }

    server {
        listen 8080;
        server_name localhost api-gateway-e2ij.onrender.com;

        # Enable gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

        # Add CORS headers for all routes
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 86400 always;

        # CORS preflight handling for all routes
        if ($request_method = 'OPTIONS') {
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain';
            return 204;
        }

        # Health check route
        location = /health {
            default_type application/json;
            return 200 '{"status": "ok", "message": "API Gateway operational"}';
        }

        # Auth service
        location /v1/auth/ {
            # Proxy to Identity service via HTTPS
            proxy_pass https://identity_service;
            proxy_set_header Host identity-service-afm5.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # SSL settings
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
        }

        # Image service
        location /v1/image/ {
            # Proxy to Image service via HTTPS
            proxy_pass https://image_service;
            proxy_set_header Host image-service-abrx.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # SSL settings
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
        }

        # Default fallback route with helpful message
        location / {
            return 404 '{"status": "error", "message": "Resource not found. Available routes: /v1/auth/, /v1/image/, /health"}';
            add_header Content-Type application/json;
        }
    }
}